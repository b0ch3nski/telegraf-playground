[agent]
  debug = true
  # logformat = "structured"
  interval = "10s"
  flush_interval = "10s"

[global_tags]
  location = "home"

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  report_active = true
  core_tags = true

[[inputs.disk]]
  mount_points = ["/", "/tmp"]

[[inputs.diskio]]
  devices = ["nvme0n1"]

[[inputs.dnsmasq]]
  log_file_path = "/tmp/dnsmasq/log.fifo"
  # [inputs.dnsmasq.tags]
  #   debug = "json"

[[inputs.dns_query]]
  interval = "60s"
  servers = ["127.0.0.1"]
  port = 5453
  domains = ["wp.pl", "onet.pl"]
  record_type = "A"
  timeout = "2s"

[[inputs.docker]]
  endpoint = "unix:///hostfs/var/run/docker.sock"

[[inputs.iptables]]
  binary = "iptables"
  table = "filter"
  chains = ["INPUT"]

# [[inputs.kernel_vmstat]]

[[inputs.linux_cpu]]
  metrics = ["cpufreq"]

[[inputs.mem]]

[[inputs.net]]
  interfaces = ["eth*", "enp*", "wl*"]

[[inputs.netflow]]
  service_address = "udp://127.0.0.1:2055"
  protocol = "ipfix"
  tagexclude = ["version"]
  # [inputs.netflow.tags]
  #   debug = "json"

[[inputs.netstat]]

[[inputs.processes]]

[[inputs.procstat]]
  exe = "telegraf"
  pid_finder = "native"
  properties = ["memory"]

# [[inputs.starlink]]

[[inputs.syslog]]
  server = "udp://127.0.0.1:514"
  best_effort = true
  # [inputs.syslog.tags]
  #   debug = "json"

[[inputs.system]]

[[inputs.temp]]

[[inputs.wireless]]

[[inputs.http_listener_v2]]
  service_address = "127.0.0.1:9091"
  paths = ["/api/v1/write"]
  data_format = "prometheusremotewrite"
  [inputs.http_listener_v2.tags]
    debug = "prom"

[[inputs.mqtt_consumer]]
  servers = ["tcp://127.0.0.1:1883"]
  topics = ["telegraf/#"]
  username = "username"
  password = "password"

  qos = 0
  keepalive = "30s"
  data_format = "influx"
  topic_tag = ""
  [inputs.mqtt_consumer.tags]
    ready = ""

[[processors.dhcp]]
  leases_file_path = "/tmp/dnsmasq/dhcp.leases"
  ip_fields = ["src", "dst", "made_by"]
  ip_tags = ["source"]

[[outputs.mqtt]]
  tagexclude = ["debug"]

  servers = ["mqtt://127.0.0.1:1883"]
  topic = 'telegraf/{{ .Tag "location" }}/{{ .Hostname }}/{{ .PluginName }}'
  username = "username"
  password = "password"

  qos = 0
  keep_alive = 30
  retain = false
  data_format = "influx"
  [outputs.mqtt.tagdrop]
    ready = [""]

[[outputs.http]]
  namedrop = ["syslog"]
  tagexclude = ["ready", "debug"]

  url = "http://127.0.0.1:9090/api/v1/write"
  method = "POST"
  username = "username"
  password = "password"
  data_format = "prometheusremotewrite"

  [outputs.http.headers]
     Content-Type = "application/x-protobuf"
     Content-Encoding = "snappy"
     X-Prometheus-Remote-Write-Version = "0.1.0"

  [outputs.http.tagpass]
    ready = [""]

[[outputs.loki]]
  namepass = ["syslog"]
  tagexclude = ["ready", "debug"]

  domain = "http://127.0.0.1:3100"
  endpoint = "/loki/api/v1/push"
  username = "username"
  password = "password"
  [outputs.loki.tagpass]
    ready = [""]

[[outputs.influxdb_v2]]
  tagexclude = ["ready", "debug"]

  urls = ["http://127.0.0.1:8086"]
  token = "token"
  organization = "org"
  bucket = "bucket"
  exclude_bucket_tag = true
  [outputs.influxdb_v2.tagpass]
    ready = [""]

[[outputs.prometheus_client]]
  namedrop = ["dnsmasq", "netflow", "syslog"]
  tagexclude = ["ready", "debug"]

  listen = "127.0.0.1:8888"
  path = "/metrics"
  [outputs.prometheus_client.tagpass]
    ready = [""]

[[outputs.file]]
  tagexclude = ["ready", "debug"]

  files = ["stdout"]
  data_format = "json"
  [outputs.file.tagpass]
    debug = ["json"]

[[outputs.file]]
  tagexclude = ["ready", "debug"]

  files = ["stdout"]
  data_format = "prometheus"
  prometheus_compact_encoding = true
  [outputs.file.tagpass]
    debug = ["prom"]
